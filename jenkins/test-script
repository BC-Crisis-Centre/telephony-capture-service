#!/bin/bash

echo 'QA Test Run Begins'
export PATH=$PATH:./scripts

# Prepare the QA environment
cp jenkins/.tcs.env .
source $WORKSPACE/.project.bash

# Select the QA environment
tcsenv QA

# Ensure that any existing QA containers are down
tcs down

# Then restart using the correct image
tcs

# Testing begins

# TEST CASE DESCRIPTION 
# Ensure that a stream of data makes it round-trip: 
# input_testdata=>pbx-interface=>rabbitmq=>tms-interface=>output_testdata
# input_testdata and output_testdata must be identical
TEST=test-pbx-to-tms-flow
if docker-compose $COMPOSE_ARGS run --rm --name QA-integrate --entrypoint bash integrate -c './lib/integrate/'$TEST'.js'; then
	echo 'Success: '$TEST
else
	echo 'Failure: '$TEST
	exit 1
fi

# TEST CASE DESCRIPTION 
# Send a stream of data, shutdown rabbitmq, then restart it.
# Ensure no dataloss
TEST=test-rabbit-interruption-part1
if docker-compose $COMPOSE_ARGS run --rm --name QA-integrate --entrypoint bash integrate -c './lib/integrate/'$TEST'.js'; then
	echo 'Success: '$TEST
else
	echo 'Failure: '$TEST
	exit 1
fi

TEST=test-rabbit-interruption-part2
if docker-compose $COMPOSE_ARGS run --rm --name QA-integrate --entrypoint bash integrate -c './lib/integrate/'$TEST'.js'; then
	echo 'Success: '$TEST
else
	echo 'Failure: '$TEST
	exit 1
fi

# TEST CASE DESCRIPTION 
