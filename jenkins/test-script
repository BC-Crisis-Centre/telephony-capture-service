#!/bin/bash

echo 'QA Test Run Begins'
export PATH=$PATH:./scripts

# Prepare the QA environment
cp jenkins/.tcs.env .
cp jenkins/.tcs.version .
. $WORKSPACE/.project.bash

# Select the test environment
tcsenv QA

# Ensure that any existing QA containers are down
tcs down

# Then start the new ones
tcs

# Testing begins

# Test Description: Ensure that a stream of data makes it round-trip: 
# input_testdata=>pbx-interface=>rabbitmq=>tms-interface=>output_testdata
# input_testdata and output_testdata must be identical
if ! docker-compose $COMPOSE_ARGS run --rm --name QA-integrate --entrypoint bash integrate -c ./lib/integrate/test-pbx-to-tms-flow.js; then
	echo 'test-pbx-to-tms-flow failure'
	exit 1
fi

# Test Description: Send a stream of data, shutdown rabbitmq, then restart it.
# Ensure no dataloss
if ! docker-compose $COMPOSE_ARGS run --rm --name QA-integrate --entrypoint bash integrate -c ./lib/integrate/test-rabbit-interruption-part1.js; then
	echo 'test-rabbit-interruption-part1 failure'
	exit 1
fi

if ! docker-compose $COMPOSE_ARGS run --rm --name QA-integrate --entrypoint bash integrate -c ./lib/integrate/test-rabbit-interruption-part1.js; then
	echo 'test-rabbit-interruption-part2 failure'
	exit 1
fi
