version: '2'

volumes:
  postgres_data: {}

services:

  tcs-node:
    build:
      context: .
      dockerfile: ./src/tcs-node/Dockerfile
    image: ccbcadmin/tcs-node${TCS_VERSION}
    container_name: tcs-node
    restart: unless-stopped

  backup-scheduler:
    image: ccbcadmin/tcs-postgres${TCS_VERSION}
    restart: unless-stopped
    container_name: backup-scheduler
    privileged: true
    network_mode: "host"
    env_file:
      - docker-compose.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/postgres/backups:/postgres_backups
    command: ["node", "lib/backup-scheduler/backup-scheduler.js"]
    depends_on:
      - tcs-postgres

  pbx-interface:
    image: ccbcadmin/tcs-node${TCS_VERSION}
    container_name: pbx-interface
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    env_file:
      - docker-compose.env
    command: ["node", "lib/pbx-interface/pbx-interface.js"]
    depends_on:
      - tcs-node

  tms-interface:
    image: ccbcadmin/tcs-node${TCS_VERSION}
    env_file:
      - docker-compose.env    
    command: ["node", "lib/tms-interface/tms-interface.js"]
    container_name: tms-interface
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    depends_on:
      - tcs-node

  database-interface:
    image: ccbcadmin/tcs-node${TCS_VERSION}
    env_file:
      - docker-compose.env
    command: ["node", "lib/database-interface/database-interface.js"]
    container_name: database-interface
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    depends_on: 
      - tcs-postgres
      - rabbitmq
      - tcs-node

  rabbitmq:
    image: letsxo/rabbitmq
    container_name: rabbitmq
    restart: unless-stopped
    privileged: true
    network_mode: "host"

  tcs-postgres:
    build: 
      context: .
      dockerfile: ./src/tcs-postgres/Dockerfile
    image: ccbcadmin/tcs-postgres${TCS_VERSION}
    container_name: tcs-postgres
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /home/postgres/backup_xlogs:/postgres_backup_xlogs

  tms-simulator:
    image: ccbcadmin/tcs-node${TCS_VERSION}
    container_name: tms-simulator
    env_file:
      - docker-compose.env
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    command: ["node", "lib/tms-simulator/tms-simulator.js"]
    depends_on:
      - tcs-node
