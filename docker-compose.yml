version: '2'

volumes:
  postgres1_data: {}
  postgres2_data: {}
  jenkins_data: {}

services:

  barman:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    restart: unless-stopped
    container_name: barman
    privileged: true
    network_mode: "host"
    environment:
      - BACKUP_SCHEDULE
    volumes:
      - postgres1_data:/pg1_data
      - postgres2_data:/pg2_data
      - ~/barman_home:/var/lib/barman
    command: ["node", "./lib/backup-scheduler/backup-scheduler.js"]

  database-interface:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: database-interface
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    depends_on: 
      - barman
      - rabbitmq
    environment:
      - POSTGRES_PASSWORD
    entrypoint: ["node", "./lib/database-interface/database-interface.js"]
  
  mangle:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: mangle
    privileged: false
    volumes:
      - /home/smdr-data:/smdr-data
    entrypoint: ["node", "./lib/mangle/mangle.js"]

  pbx-interface:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: pbx-interface
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    environment:
      - TCS_PORT=3456
      - TMS_ACTIVE=1    
    depends_on:
      - tms-interface
      - database-interface
      - jenkins
    entrypoint: ["node", "./lib/pbx-interface/pbx-interface.js"]

  pbx-simulator:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: pbx-simulator
    privileged: false
    network_mode: "host"
    volumes:
      - /home/smdr-data:/smdr-data
    environment:
      - PBX_SIMULATOR_SOURCE_DIRECTORY
      - TCS_PORT
    entrypoint: ["node", "./lib/pbx-simulator/pbx-simulator.js"]

  pg1:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: pg1
    restart: unless-stopped
    privileged: true
    network_mode: "host"  
    volumes:
      - postgres1_data:/var/lib/postgresql/data
    entrypoint: ["/docker-entrypoint.sh"]
    environment:
      - POSTGRES_PASSWORD
    command: ["postgres"]

  pg2:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: pg2
    restart: unless-stopped
    privileged: true
    network_mode: "host"  
    volumes:
      - postgres2_data:/var/lib/postgresql/data
    entrypoint: ["/docker-entrypoint.sh"]
    environment:
      - POSTGRES_PASSWORD
    command: ["postgres"]

  jenkins:
    build:
      context: .
      dockerfile: ./src/jenkins/Dockerfile
    container_name: jenkins
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  rabbitmq:
    image: letsxo/rabbitmq
    container_name: rabbitmq
    restart: unless-stopped
    privileged: true
    network_mode: "host"

  tcs-image:
    build: 
      context: .
      dockerfile: ./src/tcs-image/Dockerfile
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: tcs-image

  tms-interface:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: tms-interface
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    environment:
      - TMS_HOST
      - TMS_PORT
    entrypoint: ["node", "./lib/tms-interface/tms-interface.js"]
   
  tms-simulator:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: tms-simulator
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    environment:
      - TMS_PORT
    entrypoint: ["node", "./lib/tms-simulator/tms-simulator.js"]
