version: '2'

volumes:
  postgres_data: {}

services:
  backup-scheduler:
    build:
      context: .
      dockerfile: ./src/backup-scheduler/Dockerfile
    restart: unless-stopped
    image: ccbcadmin/tcs-backup-scheduler${TCS_VERSION}
    container_name: backup-scheduler
    privileged: true
    network_mode: "host"
    env_file:
      - docker-compose.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/postgres/backups:/postgres_backups
      - ./lib:/service/lib
  tcs:
    build:
      context: .
      dockerfile: ./src/telephony-capture-service/Dockerfile
    image: ccbcadmin/tcs-telephony-capture-service${TCS_VERSION}
    container_name: telephony-capture-service
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    env_file:
      - docker-compose.env
#    ports:
#      - "3456:3456"
#    links:
#      - rabbitmq
#      - tms-interface
#      - database-interface
    volumes:
      - ./lib:/service/lib
  tms-interface:
    build:
      context: .
      dockerfile: ./src/tms-interface/Dockerfile
    image: ccbcadmin/tcs-tms-interface${TCS_VERSION}
    container_name: tms-interface
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    env_file:
      - docker-compose.env
 #   links:
 #     - rabbitmq
    volumes:
      - ./lib:/service/lib
  database-interface:
    build:
      context: .
      dockerfile: ./src/database-interface/Dockerfile
    image: ccbcadmin/tcs-database-interface${TCS_VERSION}
    container_name: database-interface
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    env_file:
      - docker-compose.env
#    links:
#      - rabbitmq
#      - postgres
    volumes:
      - ./lib:/service/lib  
  rabbitmq:
    image: letsxo/rabbitmq:latest
    container_name: rabbitmq
#    ports:
#     - "4369:4369"
#      - "5671:5671"
#      - "25672:25672"
#      - "5672:5672"
#      - "15671:15671"
#      - "15672:15672"
    restart: unless-stopped
    privileged: true
    network_mode: "host"
  postgres:
    build: 
      context: .
      dockerfile: ./src/postgres/Dockerfile
    image: ccbcadmin/tcs-postgres${TCS_VERSION}
    container_name: postgres
    restart: unless-stopped
    privileged: true
    network_mode: "host"
 #   ports:
 #     - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /home/postgres/backup_xlogs:/postgres_backup_xlogs
  tms-simulator:
    build:
      context: .
      dockerfile: ./src/tms-simulator/Dockerfile
    image: ccbcadmin/tcs-tms-simulator${TCS_VERSION}
    container_name: tms-simulator
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    env_file:
      - docker-compose.env
#    ports:
#      - "6543:6543"
    volumes:
      - ./lib:/service/lib  
  command-line:
    build:
      context: .
      dockerfile: ./src/command-line/Dockerfile
    image: ccbcadmin/tcs-command-line${TCS_VERSION}
    container_name: command-line
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    env_file:
      - docker-compose.env
    volumes:
      - /home/smdr-data:/smdr-data
      - ./lib:/app/lib
