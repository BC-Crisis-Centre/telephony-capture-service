#!/bin/bash

PROGNAME=$(basename $0)
source ./scripts/bash-functions

cleanup () {
	docker-compose $COMPOSE_ARGS down 
}

USAGE='Usage: tcs [down] [dev|qa|prod]';

if [ "$#" != 0 ] && [ "$#" != 1 ] && [ $# != 2 ]; then error-exit "$USAGE"; fi

# ensure input params validity
if [ "$#" == 1 ]; then 
	case "$1" in
		[d][o][w][n])
			if is-multi-environment; then
				msg 'Stores containers not shutdown - other operating environments active'
			else
				docker-compose $STORES_COMPOSE_ARGS down --remove-orphans
			fi
			docker-compose $COMPOSE_ARGS down --remove-orphans &> /dev/null
			echo 'TCS Down, Operating Environment:'$TCSENV_LONG_FORM', Version'$TCS_VERSION
			exit 0
			;;
		[d][e][v])
			TCSENV=dev
			COMPOSE_ARGS=$DEV_COMPOSE_ARGS
			;;
		[q][a])
			TCSENV=qa
			COMPOSE_ARGS=$QA_COMPOSE_ARGS
			;;
		[p][r][o][d])
			TCSENV=prod
			COMPOSE_ARGS=$PROD_COMPOSE_ARGS
			;;
		*)
			error-exit "$USAGE";
	esac		
elif [ $# == 2 ]; then
	case "$2" in
		[d][e][v])
			TCSENV=dev
			COMPOSE_ARGS=$DEV_COMPOSE_ARGS
			;;
		[q][a])
			TCSENV=qa
			COMPOSE_ARGS=$QA_COMPOSE_ARGS
			;;
		[p][r][o][d])
			TCSENV=prod
			COMPOSE_ARGS=$PROD_COMPOSE_ARGS
			;;
		*)
			error-exit "$USAGE";
	esac	
	if [ $1 != 'down' ]; then 
		error-exit "$USAGE"; 
	else 
		docker-compose $COMPOSE_ARGS down --remove-orphans &> /dev/null
		msg 'TCS ('$TCSENV') Down'
		exit 0; 
	fi
fi	

source ./.tcs.version

pull-tcs-image || exit 1;

trap cleanup EXIT

start-barman || exit 1;
start-pg1 || exit 1;
start-rabbitmq || exit 1;
start-jenkins || exit 1;

echo 'Here 1'
start-tcs || exit 1;

echo 'TCS Up, Operating Environment:'$TCSENV_LONG_FORM', Version'$TCS_VERSION
clean-exit
