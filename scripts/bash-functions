#!/bin/bash

is-pg1-active () {
	docker exec -it pg1 sh -c 'psql -c "select version();" -U postgres; exit $?;' &>/dev/null
	return $?
}

is-pg2-active () {
	docker exec -it pg2 sh -c 'psql -c "select version();" -U postgres; exit $?;' &>/dev/null
	return $?
}

active-pg () {
    if is-pg1-active; then
        ACTIVE_PG=pg1
        return 0
    else 
        if is-pg2-active; then
            ACTIVE_PG=pg2
            return 0
        else
            unset ACTIVE_PG
            return 1; # Neither
        fi
    fi
}

is-pg1-pitr () {
	docker exec -it pg1 sh -c 'psql -c "select version();" -p 5433 -U postgres; exit $?;' &>/dev/null
	return $?
}

is-pg2-pitr () {
	docker exec -it pg2 sh -c 'psql -c "select version();" -p 5433 -U postgres; exit $?;' &>/dev/null
	return $?
}

pitr-pg () {
    if is-pg1-pitr; then
        PITR_PG=pg1
        return 0
    else 
        if is-pg2-pitr; then
            PITR_PG=pg2
            return 0
        else
            unset PITR_PG
            return 1; # Neither
        fi
    fi
}

msg () {
	echo "${PROGNAME}: ${1:-"Message Not Provided"}" 1>&2
}

error-exit () {
	# Display error message and exit
	msg "${1:-"Unknown Error"}" 1>&2
    msg 'Aborted'
	exit
}

enable-stream-replication () {
	if [ $# == 1 ]; then
		local PORT=5432
	elif [ $# == 2 ]; then
		local PORT=$2
	else
		return 1
	fi

	docker exec -it $1 sh -c 'psql -c "ALTER SYSTEM SET archive_command TO true;" -U postgres -p '$PORT'; exit $?;' &> /dev/null
	if [ $? != 0 ]; then return 1; fi
	docker exec -it $1 sh -c 'psql -c "SELECT pg_reload_conf();" -U postgres  -p '$PORT'; exit $?;' &> /dev/null
	return $?
}

barman-create-slot () {
	docker exec -it barman sh -c 'barman receive-wal --create-slot '$1'; exit $?;' &> /dev/null
	return $?
}

barman-reset () {
	docker exec -it barman sh -c 'barman receive-wal --reset '$1'; exit $?;' &> /dev/null
	return $?
}

barman-cron () {
	docker exec -it barman sh -c 'barman cron; exit $?;' &> /dev/null
	return $?
}

barman-check () {
	docker exec -it barman sh -c 'ps -ef | grep pg_receivexlog | grep -v grep; exit $?;' > /dev/null
	return $?
}

validate-pg-selection () {
    if [ "$1" != 'pg1' ]; then
        if [ "$1" != 'pg2' ]; then
            return 1
        fi
    fi
    return 0
}

validate-backup_id () {
    docker exec -it barman sh -c 'barman list-backup --minimal '$1' | grep -w '$2'; exit $?;' > /dev/null
    return $?
}
