version: '2'

volumes:
  postgres1_data: {}
  postgres2_data: {}
  jenkins_data: {}
  rabbitmq_data: {}

services:

  barman:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: barman
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    env_file: ./env_PROD/env
    volumes:
      - /etc/localtime:/etc/localtime
      - /etc/barman.d:$PWD/env_PROD/barman.conf
      - postgres1_data:/pg1_data
      - postgres2_data:/pg2_data
      - /home/barman:/var/lib/barman
    command: ["node", "./lib/backup-scheduler/backup-scheduler.js"]

  pg1:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: pg1
    restart: unless-stopped
    privileged: true
    network_mode: "host"  
    volumes:
      - /etc/localtime:/etc/localtime
      - postgres1_data:/var/lib/postgresql/data
    entrypoint: ["/docker-entrypoint.sh"]
    environment:
      - POSTGRES_PASSWORD
    command: ["postgres", "-p", "5432"]

  pg2:
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: pg2
    restart: unless-stopped
    privileged: true
    network_mode: "host"  
    volumes:
      - /etc/localtime:/etc/localtime
      - postgres2_data:/var/lib/postgresql/data
    entrypoint: ["/docker-entrypoint.sh"]
    environment:
      - POSTGRES_PASSWORD
    command: ["postgres", "-p", "5433"]

  jenkins:
    build:
      context: .
      dockerfile: $PWD/src/integrate/Dockerfile
    image: ccbcadmin/tcs-jenkins${TCS_VERSION}
    container_name: jenkins
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    volumes:
      - /etc/localtime:/etc/localtime
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock

  rabbitmq:
    image: letsxo/rabbitmq
    container_name: rabbitmq
    restart: unless-stopped
    privileged: true
    network_mode: "host"
    volumes:
      - /etc/localtime:/etc/localtime
      - rabbitmq_data:/var/lib/rabbitmq

  tcs-image:
    build: 
      context: .
      dockerfile: $PWD/src/tcs-image/Dockerfile
    image: ccbcadmin/tcs-image${TCS_VERSION}
    container_name: tcs-image
